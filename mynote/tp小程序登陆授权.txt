授权总结：
wx.checkSession 先判断是否是登录状态
若不是则
1、调用 wx.login 获取 code 将 3drsession 保存在本地（后面用于调用接口数据的凭证）
2、wx.getSetting 获取用户配置是否有获取用户信息
如果有就下一步 获取用户信息 wx.getUserInfo 
如果没有 配置用户配置 调起授权 wx.authorize 后再获取用户信息 wx.getUserInfo
获取用户信息后可以将数据回传服务器保存
3、存在用户拒绝授权的情况下
用户拒绝在 wx.getUserInfo 的回调 fail 里面调起用户配置 wx.openSetting 配置成功 再去获取用户信息
若是则
校验 3drsession 是否合法
补丁
多加一个状态 isaotusel 检验本次获取信息是否获取到用户信息当为0时候 页面刷新重启始终调起用户授权


[url][/url]



//app.js
App({
onLaunch: function () {
var obj = this;
//判断用户登录
wx.checkSession({
success: function () {
//session 未过期，并且在本生命周期一直有效
var rd3_session = wx.getStorageSync('3rd_session');
wx.request({
url: 'https://xxxx/api/index/check_3rdsession',
data: {
rd3_session: rd3_session
},
header: {
'content-type': 'application/json'
},
success: function (res) {
//检验服务端用户是否过期
if (res.data == false){
obj.login_wx();
}
}
})
},
fail: function () {
//登录态过期
obj.login_wx();
}
})
//
if (obj.globalData.isaotusel == 0) {
this.getuser();
}
},
//登录
login_wx() {
var obj = this;
wx.login({
success: res => {
// 发送 res.code 到后台换取 openId, sessionKey, unionId
wx.request({
url: 'https://xxxx/api/index/onlogin',
data: {
code: res.code
},
header: {
'content-type': 'application/json'
},
success: function (res) {
if (res.data.rd3_session != '') {
//获取到的3rd_session保存在本地
wx.setStorageSync('3rd_session', res.data.rd3_session)
//获取用户信息
obj.checkaotu();
}
}
})
}
})
},
// 判断是否同意授权过
checkaotu() {
var obj = this;
//获取用户授权设置
wx.getSetting({
success: res => {
if (res.authSetting['scope.userInfo']) {
// 已经授权，可以直接调用 getUserInfo 获取头像昵称，不会弹框
this.getuser();
} else {
//没有配置授权，调起授权
wx.authorize({
scope: 'scope.userInfo',
success: res => {
this.getuser();
}
})
}
}
})
},
//获取用户信息
getuser() {
var obj = this;
wx.getUserInfo({
success: res => {
// 可以将 res 发送给后台解码出 unionId
this.globalData.userInfo = res.userInfo
wx.request({
url: 'https://xxxx/api/index/setuserinfo',
data: {
info_json: JSON.stringify(res.userInfo),
rd3_session: wx.getStorageSync('3rd_session')
},
header: {
"Content-Type": "application/x-www-form-urlencoded"
},
method: "POST",
success: function (res) {
//操作
obj.globalData.isaotusel = 1;
}
})
// 由于 getUserInfo 是网络请求，可能会在 Page.onload 之后才返回
// 所以此处加入 callback 以防止这种情况
if (this.userInfoReadyCallback) {
this.userInfoReadyCallback(res)
}
}, fail() {
//用户拒绝则不然操作
wx.openSetting({
success: (res) => {
obj.getuser();
}
});
}
})
},

globalData: {
userInfo: null,
isaotusel: 0
},
})



//后端代码
/**
* 通过此方法获取随机数，但需要mycrpt支持
*/
function randomFromDev($len)
{
$fp = @fopen('/dev/urandom','rb');
$result = '';
if ($fp !== FALSE) {
$result .= @fread($fp, $len);
@fclose($fp);
}
else
{
trigger_error('Can not open /dev/urandom.');
}
// convert from binary to string
$result = base64_encode($result);
// remove none url chars
$result = strtr($result, '+/', '-_');
// Remove = from the end
$result = str_replace('=', ' ', $result);
return $result;
}
/**
* 小程序登录
* check_user 用于检查表是否存在unionid
*/
function onlogin(){
$code = $_GET['code'];
$url = "https://api.weixin.qq.com/sns/jscode2session?appid=XXXX&secret=XXXXX&js_code={$code}&grant_type=authorization_code";
$data = file_get_contents($url);
$data_arr = json_decode($data);
$usermodel = new model\user();
$user_id = $usermodel->check_user($data_arr);
$data_arr->user_id = $user_id;
$data = json_encode($data_arr);
$rd3_str = $this->randomFromDev(16);
$rd3_str = trim($rd3_str);
$redis = new Redis();
$redis->set($rd3_str,$data,86400);
die(json_encode(['rd3_session'=>$rd3_str]));
}
/**
* 检验是否过期
*/
function check_3rdsession(){
$rd3_session_str = $_GET['rd3_session'];
$redis = new Redis();
$rd3_session = $redis->get($rd3_session_str);
die(json_encode($rd3_session));
}
/**
* 写入用户信息
* update_info 跟新用户信息、这里有涉及其他的操作独立一个方法出来
*/
function setuserinfo(){
$rd3_session_str = $_POST['rd3_session'];
$redis = new Redis();
$rd3_session = $redis->get($rd3_session_str);
$info_json = json_decode($_POST['info_json']);
$usermodel = new model\user();
if($usermodel->update_info($rd3_session['user_id'],$info_json)){
die(json_encode(['code'=>1,'msg'=>'ok','user_info'=>$user_info]));
}else{
die(json_encode(['code'=>0,'msg'=>'error','user_info'=>$user_info]));
}
}