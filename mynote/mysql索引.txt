mysql 什么时候用单列索引？什么使用用联合索引？
我一个表 students 表，有3个字段 ，id,name,age  我要查询 通过 name 和age，在这两个字段 是创建 联合索引？还是分别在nage和age上创建 单列索引呢？ 多个字段查询什么情况下用联合索引 什么时候分别创建单列索引呢？



1，首先要确定优化的目标，在什么样的业务场景下，表的大小等等。如果表比较小的话，可能都不需要加索引。

2，哪些字段可以建索引，一般都where、order by 或者 group by 后面的字段。

3，记录修改的时候需要维护索引，所以会有开销，要衡量建了索引之后的得与失。

 学生表，可以认为name的重复度比较小，而age的重复度比较大，对于单列索引来说，比较适合建在重读度低的列上。

  对于select * from students where name='张三’and  age=18; 题主所说的两种情况

A. name 和 age 各自单独建立索引。 
这种索引的切合度最好，mysql会直接选用这个索引。但相对单独的name索引来说，维护的成本要大一些，并且索引数据占用的存储空间也要更大一些。

 回过来看，有必要使用联合索引吗？ 我的看法是没有必要，因为学校里可能会有重名的人，但比较少。用name就可以比较精准的找到记录，即使有重复的也比较少。

什么情况下使用联合索引比较好呢？ 举一个例子，大学选认课老师，需要创建一个关系对应表，有2个字段,student_id 和 teacher_id，想要查询某个老师和某个学生是否存在师生关系。

一个学生会选几十个老师，一个老师会带几百个学生

如果只为student_id建立索引的情况下，经过索引会选出几十条记录，然后在内存中where一下，去除其余的老师。

相反如果只为teacher_id建立索引，经过索引会选出几百条记录，然后在内存中where一下，去除其余的学生。

两种情况都不是最优的，这个时候使用联合索引最合适，通过索引直接找到对应记录。

自己总结：
一、like 以% 开头的建立索引无效
  
二、主键不需要建立索引，自带索引功能

三、关系对应表可以建立联合索引

四、单列索引比较适合建立在重读度低的列上

五、索引一般建立在where、order by、group by 后面的字段






